#!/bin/bash

### md2pdf : version allégée de eufemd en ligne de commande
### beamer : génère une présentation
#
# MIT License
#
# Copyright (c) 2019 Patrick CARDONA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

###########################################################
### Fonctions de génération des documents #################
###########################################################

### entete_presentation ###################################
# Génère l'en-tête de la présentation

conf()
{

if ! [[ -f $HOME/.md2pdf.conf ]];then
	echo "# Variables par défaut de md2pdf" >"$HOME/.md2pdf.conf"
	{
	echo "NIVEAU=\"NIV\""
	echo "TITRE=\"MON TITRE\""
	echo "ACTIVITE=\"MON ACTIVITE\""
	echo "AUTEUR=\"MOI\""
	echo "MATIERE=\"MA MATIERE\""
	echo "THEME=\"focus\""
	} >>"$HOME/.md2pdf.conf"
fi

}

entete_presentation()
{

# On récupère les variables
. "$HOME/.md2pdf.conf"

# Nom du fichier d'en-tête de la présentation
local CIBLE
CIBLE=/tmp/ENTETE_PRESENTATION.md

# On écrit l'en-tête
local DATE
DATE=$(date +"%d %b %Y")

printf "%% %s \n%% %s \n%% %s  \n\n" "$TITRE" "zzz" "${NIVEAU}e --- $ACTIVITE --- $AUTEUR --- Mise à jour : $DATE" > "$CIBLE"

echo "---" >> "$CIBLE"
{
echo "header-includes: |"
echo "  \\definecolor{bleudefrance}{rgb}{0.19, 0.55, 0.91}"
echo "	\\usepackage{tabularx}"
echo "	\\usepackage{colortbl}"
echo "	\\usepackage{qtree}"
echo "	\\let\\oldemph\\emph"
echo "	\\renewcommand\\emph[1]{{\\color{bleudefrance}\\oldemph{#1}}}"
echo "	\\let\\oldtextbf\\textbf"
echo "	\\renewcommand\\textbf[1]{{\\color{bleudefrance}\\oldtextbf{#1}}}"
} >> "$CIBLE"
echo "---" >> "$CIBLE"

return 0
}

##########################################################
### md2beamer ############################################
# Génère la présentation

md2beamer()
{

# On récupère les variables
. "$HOME/.md2pdf.conf"

local IN
IN=$1
local ET
ET=/tmp/ENTETE_PRESENTATION.md
local TEX
TEX=/usr/local/share/eufemd/TEX

# On génère puis on ajoute l'en-tête...
conf
entete_presentation

echo "Présentation au format Beamer / PDF..."
pandoc -s -t beamer --slide-level 2 -H $TEX/citation.tex -V theme:$THEME $ET $IN -o "${1%*.md}_presentation.pdf"

}

visionneuse(){

if [[ $TERM == 'xterm' ]];then
	VOIR='qpdfview'
else
	VOIR='mcview'
fi

for f in ./*_presentation.pdf
do
	if [[ -f $f ]];then
		 eval "$VOIR $f 2>/dev/null"
	fi
done

}


### Fin des fonctions secondaires ##########################

conf

if [[ -z $1 ]];then
	echo "Usages :"
	echo -e "\n${0##*/} <fichier_source>.md"
	echo -e "\tGénère une présentation simple." 
	echo -e "\n${0##*/} --config"
	echo -e "${0##*/} -c"
	echo -e "\tPermet de personnaliser les champs, en éditant le fichier $HOME/.md2pdf.conf"
	echo -e "\n${0##*/} --voir-pdf"
	echo -e "${0##*/} -v"
	echo -e "\tPermet de visualiser le PDF généré."
	exit 1
else
	if [[ $1 = '--config' ]] || [[ $1 = '-c' ]];then
		nano "$HOME/.md2pdf.conf"
		exit 0
	elif [[ $1 = '--voir-pdf' ]] || [[ $1 = '-v' ]];then
		visionneuse
		exit 0
	else
		nano "$HOME/.md2pdf.conf"
		TITRE=${1%*.md}
		FIC=$1
		echo "Génération en cours... Veuillez patienter." 
		md2beamer "$FIC"
		echo "100 % accomplis."
	fi
fi
